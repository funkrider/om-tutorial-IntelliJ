<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1487530383097">{:repl-history {:ide [], :local [&quot;(+ 1 3)&quot; &quot;(in-ns om-tutorial.core)&quot; &quot;(ns om-tutorial.core)&quot; &quot;(map #(hello {:react-key % :title (str \&quot;Hello \&quot; %)})\n  (range 3))&quot; &quot;(defui HelloWorld\n  Object\n  (render [this]\n    (dom/div nil (:title (om/props this) ))))\n\n(def hello (om/factory HelloWorld))&quot; &quot;(ns om-tutorial.core\n  (:require [goog.dom :as gdom]\n            [om.next :as om :refer-macros [defui]]\n            [om.dom :as dom]))&quot; &quot;(defui HelloWorld\n  Object\n  (render [this]\n    (dom/div nil (:title (om/props this) ))))&quot; &quot;(def hello (om/factory HelloWorld))&quot; &quot;(js/ReactDOM.render\n  (apply dom/div nil\n    (map #(hello {:react-key % :title (str \&quot;Hello \&quot; %)})\n      (range 3)))\n  (gdom/getElement \&quot;app\&quot;))&quot; &quot;(map #(hello {:react-key % :title (str \&quot;Hello \&quot; %)})\n      (range 3))&quot; &quot;(defui HelloWorld\n  Object\n  (render [this]\n    (dom/div nil (:title (om/props this) ))))\n(range 3)\n\n(def hello (om/factory HelloWorld))&quot; &quot;(range 3)&quot; &quot;(map #(+ % 10) (range 3))&quot; &quot;(map #(str \&quot;Hello \&quot; %) (range 3))&quot; &quot;(hello {:title \&quot;test\&quot;})&quot; &quot;(apply #(* % %) '(3 4 5))&quot; &quot;(apply + 1\n  '(3 4 5))&quot; &quot;(apply + 1\n  '(\n     4 5))&quot; &quot;(apply + 1 '(4 5))&quot; &quot;(+ 1 '(4 5))&quot;], :remote []}}</component>
</project>